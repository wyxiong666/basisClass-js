1.什么是number类型的数据
整数，小数，NaN
1）四则运算失败的时候NaN
2)其他数据类型转化成数类型失败的时候
   Number()
   规则：true->1 false->0 null->0 ""->0 undefined->NaN
        其他字符串，只有有一个不是数字字符，则是NaN
   parseInt() 把字符串的整数部分拎出来，首字符如果不是数字则转化成NaN
   parseFloat() 把字符串的整数或小数部分拎出来，首字符如果不是数字或小数点则转化成NaN

2.boolean类型的数据
 true和false
 Boolean()
 规则：0,"",NaN,null,undefined 转换成boolean类型时是false，其他的true
 ![] ->false
 !![]->Boolean([])->true

 3.字符串类型的数据
 只要拿''或者""包起来的字符则是字符串
 1.var str ="abc" str.length获得字符串的长度
 2.通过下标获取每个字符 str[0]
 3.区别变量和字符串 'str'和str
 4.转义字符\ \\ \r \n \t \' \"
 5.+在字符串表示拼接的意思(变量和字符串的拼接)
    var str = "bcd";
    var str2 =  "a"+str+"e"
 4.null和undefined
 undefined 表示从未存在过
 null 虽然现在没有，但是以后会有的

 5.通过id名获取到元素(唯一的一个)
 document.getElementById("div1")


 6.对象类型
 1)基本类型的数据每次只能表示一个值，每个变量只能存储一个值
 var price = "5元"；
 var person = "男";

 2)概念：
    对象类型的数据可以存储不同类型的值，是多种数据类型的复合载体
    一个对象是由多个属性（属性名和属性值之间以：隔开）组成，每个属性之间以逗号隔开
    一个属性也称为一个键值对
 3)定义：
   var obj ={} 对象直接量的方式
   var obj = new Object() //正式第一周面向对象再讲
   var person = {name:"lucy",age:21,gender:"男",height:165,weight:"60kg",fn:function(){}}
 4)操作对象：增删改查
  每次操作对象由两种方式，一种打.的方式 另一种是[]的方式
  获取表示查找，赋值表示添加
  赋值时如果属性名不存在则表示添加，如果存在则表示修改
  5)对象这边的注意点：
  1.如果属性名是数字，则只能以[]的方式获取，[]里引号可写可不写
  2.对象里属性名不能重复

 7.条件语句
    = 赋值
    == 比较 会自动的数据类型转动
    === 严格比较 数值相同，数据类型类型相同
    1)适合于两种情况的判断
    if(条件){
      条件成立执行这儿
    }else{
       条件不成立执行这儿
    }

    2)适合于多种情况
    if(条件一){
        条件一成立，执行这里，不会再继续往下看
    }else if(条件二){

    }else if(条件三){

    }else{
       以上都不成立，则执行到else下的语句
    }

    3)switch...case... 一个变量有多种值的情况
    变量和值之间是三个等号的比较
    case下的语句执行完后要写break,跳出整个switch语句，若忘了写break,则会忽视条件继续往下执行，直到遇到break
    var a = 1;
    switch(条件a){
        case 1:
         console.log(1);
         break;
        case 2:
         console.log(2);
          break;
        default:
         console.log(3);
    }

8.循环语句 for循环
var n = i++; 先把i的值赋给n,i再累加


预习明天内容：
    函数function和选项卡
    重要程度*****
    难度系数*****






